generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      String   @default("admin")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  songs     Song[]   @relation("UserSongs")
}

model Song {
  id          String    @id @default(uuid())
  title       String
  artist      String
  defaultKey  String
  category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  String?
  creator     User?     @relation("UserSongs", fields: [creatorId], references: [id])
  creatorId   String?   // Made optional
  lyrics      Lyric[]   @relation("SongLyrics")
  images      SongImage[] @relation("SongImages")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  albums      SongAlbum[] @relation("SongAlbums")
}

model Lyric {
  id        String   @id @default(uuid())
  song      Song     @relation("SongLyrics", fields: [songId], references: [id])
  songId    String
  wordOrder Int
  word      String
  chord     String?
  chordType String?  // "above", "inline", or null
}

model Category {
  id          String   @id @default(uuid())
  name        String   @unique
  description String?
  songs       Song[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model SongAlbum {
  id          String   @id @default(uuid())
  song        Song     @relation("SongAlbums", fields: [songId], references: [id], onDelete: Cascade)
  songId      String
  albumName   String
  artist      String?
  releaseDate DateTime?
  coverImage  String? // URL ของภาพปก
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([songId])
}


model SongImage {
  id          String   @id @default(uuid())
  song        Song     @relation("SongImages", fields: [songId], references: [id], onDelete: Cascade)
  songId      String
  filename    String   // ชื่อไฟล์เดิม
  url         String   // URL ของ Supabase
  size        Int      // ขนาดไฟล์ใน bytes
  mimeType    String   // image/jpeg, image/png, etc.
  order       Int      @default(0) // ลำดับการแสดง
  storagePath String?  // Supabase storage path สำหรับการลบ
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([songId, order])
}